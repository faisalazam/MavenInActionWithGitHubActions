<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>au.com.lucidtech.maveninactionwithgithubactions</groupId>
        <artifactId>maveninactionwithgithubactions</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>

    <groupId>au.com.lucidtech.maveninactionwithgithubactions.mavenandtesting</groupId>
    <artifactId>maveninactionwithgithubactions.mavenandtesting</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Testing with Maven</name>
    <description>Setting up Maven plugins for testing and reporting</description>
    <url>${scm.repo.link}</url>

    <organization>
        <name>${organization.name}</name>
        <url>${organization.url}</url>
    </organization>

    <scm>
        <url>${scm.repo.link}</url>
        <connection>scm:git:${scm.repo.link}.git</connection>
        <developerConnection>scm:git:${scm.repo.link}.git</developerConnection>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>${issueManagement.url}</url>
    </issueManagement>

    <ciManagement>
        <system>github-actions</system>
        <url>${ciManagement.url}</url>
    </ciManagement>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>${owner.name}</name>
            <organization>${project.organization.name}</organization>
            <organizationUrl>${organization.url}</organizationUrl>
            <roles>
                <role>developer</role>
            </roles>
            <timezone>GMT</timezone>
        </developer>
    </developers>

    <properties>
        <owner.name>Muhammad Faisal</owner.name>
        <organization.name>LucidTech</organization.name>

        <owner.twitter.handle>mfa1616</owner.twitter.handle>

        <scm.user.name>faisalazam</scm.user.name>
        <scm.repo.name>MavenInActionWithGitHubActions</scm.repo.name>
        <scm.user.link>https://github.com/${scm.user.name}</scm.user.link>
        <scm.repo.link>${scm.user.link}/${scm.repo.name}</scm.repo.link>

        <issueManagement.url>${scm.repo.link}/issues</issueManagement.url>
        <ciManagement.url>${scm.repo.link}/actions</ciManagement.url>
        <organization.url>${scm.user.link}</organization.url>

        <target.directory>${project.build.directory}</target.directory>
        <target.markdown.directory>src/site/markdown</target.markdown.directory>

        <skip.unit.tests>false</skip.unit.tests>
        <ignore.test.failures>false</ignore.test.failures>
        <skip.integration.tests>false</skip.integration.tests>

        <copy.right.info>
            <![CDATA[CopyrightÂ© 2023 <a href="${organization.url}">${organization.name}</a>. All Rights Reserved.]]></copy.right.info>

        <!--    Setting the encodings to avoid warnings like `Input file encoding has not been set`    -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!--   Setting the versions to use Java 20   -->
        <java.version>20</java.version>
        <maven.compiler.release>20</maven.compiler.release>

        <!--   Plugin Versions   -->
        <maven-jxr-plugin.version>3.3.0</maven-jxr-plugin.version>
        <maven-site-plugin.version>4.0.0-M8</maven-site-plugin.version>
        <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.1.2</maven-failsafe-plugin.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-surefire-report-plugin.version>3.1.2</maven-surefire-report-plugin.version>
        <maven-project-info-reports-plugin.version>3.4.5</maven-project-info-reports-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- TEST -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--     Start -> By default your version of Maven might use an old version of the maven-compiler-plugin
                     that is not compatible with Java 9 or later versions. To target Java 9 or later, you should at least
                     use version 3.6.0 of the maven-compiler-plugin and set the maven.compiler.release property to the
                     Java release you are targeting (e.g. 9, 10, 11, 12, etc.)       -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <!--     Start -> This plugin is included just to define the `skip.unit.tests` variable, so that we can skip unit tests whenever we want       -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skipTests>${skip.unit.tests}</skipTests>
                    <testFailureIgnore>${ignore.test.failures}</testFailureIgnore>
                </configuration>
            </plugin>
            <!--     End -> This plugin is included just to define the `skip.unit.tests` variable, so that we can skip unit tests whenever we want       -->
            <!--     Start -> This plugin will be used to run Integration tests separately from unit tests      -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven-failsafe-plugin.version}</version>
                <configuration>
                    <skipTests>${skip.integration.tests}</skipTests>
                    <testFailureIgnore>${ignore.test.failures}</testFailureIgnore>
                </configuration>
            </plugin>
            <!--     End -> This plugin will be used to run Integration tests separately from unit tests      -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <!-- Copy the readme file to the site markdown directory so that a page is generated from it. -->
                        <id>copy-readme</id>
                        <phase>pre-site</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${target.markdown.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <include>README.md</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
                <configuration>
                    <linkXRef>true</linkXRef>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report-only</report>
                            <report>failsafe-report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!--    Start -> Plugin to fix the `Unable to locate Test Source XRef to link to - DISABLED` issue coming up while generating the surefire report       -->
            <!--    It'll actually create links to the source classes in the site generated by `mvn site`       -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven-jxr-plugin.version}</version>
            </plugin>
            <!--    End -> Plugin to fix the `Unable to locate Test Source XRef to link to - DISABLED` issue coming up while generating the surefire report       -->
        </plugins>
    </reporting>

    <profiles>
        <!-- profile for Unit test only -->
        <profile>
            <id>ut</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!--profile for Integration test only -->
        <profile>
            <id>it</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>false</skip.integration.tests>
            </properties>
        </profile>
        <!-- Both Unit and Integration tests combined -->
        <profile>
            <id>uit</id>
            <properties>
                <skip.unit.tests>false</skip.unit.tests>
                <skip.integration.tests>false</skip.integration.tests>
            </properties>
        </profile>
        <!-- No test execution required at all -->
        <profile>
            <id>nt</id>
            <properties>
                <skip.unit.tests>true</skip.unit.tests>
                <skip.integration.tests>true</skip.integration.tests>
            </properties>
        </profile>
    </profiles>
</project>
