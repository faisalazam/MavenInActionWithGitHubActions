name: 'Tests the application Code and uploads the results'
description: 'composite run action'

inputs:
  JAVA_VERSION_TO_INSTALL:
    required: true
    description: 'Java version to be installed'
  UPLOADED_ARTIFACTS_DIR:
    required: true
    description: 'Uploads artifacts directory'
  PUTTING_ALL_TOGETHER_DIR:
    required: true
    description: 'Directory containing the module code'

runs:
  using: "composite"
  steps:
    - name: 'Set up the Oracle JDK `${{ inputs.JAVA_VERSION_TO_INSTALL }}`'
      uses: './.github/actions/install-java'
      with:
        JAVA_VERSION_TO_INSTALL: ${{ inputs.JAVA_VERSION_TO_INSTALL }}
    - name: 'Download the uploaded `ut` and `it` artifacts'
      uses: actions/download-artifact@v3
      with:
        path: ${{ inputs.UPLOADED_ARTIFACTS_DIR }}
    - name: 'Change working directory `${{ inputs.PUTTING_ALL_TOGETHER_DIR }}`'
      run: cd ${{ inputs.PUTTING_ALL_TOGETHER_DIR }}
      shell: bash
    - name: 'Copy the `ut` and `it` artifacts into the `target` folder'
      run: |
        mkdir target
        cp -r ${{ env.UPLOADED_ARTIFACTS_DIR }}/${{ env.UPLOADED_ARTIFACTS_DIR }}-ut/* target
        cp -rf ${{ env.UPLOADED_ARTIFACTS_DIR }}/${{ env.UPLOADED_ARTIFACTS_DIR }}-it/* target
      shell: bash
    - name: 'Cache Maven packages'
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-site-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-*
    - name: 'Generates the project''s site'
      run: mvn site -P nt --file pom.xml
      shell: bash
    - name: 'Uploads the results to ${{ inputs.UPLOADED_ARTIFACTS_DIR }} folder'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.UPLOADED_ARTIFACTS_DIR }}
        retention-days: 1
        path: target