name: 'CI/CD'
on: push
env:
  JAVA_VERSION: 20

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'Compiles the application code'
        run: mvn clean compile --file pom.xml
  test:
    runs-on: ubuntu-latest

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'Runs the unit tests to test the application code'
        run: mvn test --file pom.xml
  deploy-to-gh-pages:
    needs:
      - build
      - test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'TODO: upload the artifacts in the test job and then delete this action'
        run: mvn clean test --file pom.xml
      - name: 'Generating the project site with testing report as well as code coverage report'
        run: mvn site --file pom.xml
      - name: 'Packaging the application'
        run: mvn --batch-mode --update-snapshots -DskipTests package --file pom.xml #TODO: upload the artifacts in the test job and then clean package
      - name: 'Install gh-pages'
        run: npm i gh-pages
      - name: 'Deploy with gh-pages'
        run: ./.github/scripts/deploy-to-gh-pages.sh
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy-to-gh-packages:
    needs: setup-env
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/deploy.yml
    with:
      JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}