name: 'JAVA CI/CD'
on: push
env:
  JAVA_VERSION: 20

jobs:
  setup-env:
    runs-on: ubuntu-latest
    outputs:
      JAVA_VERSION: ${{steps.setup-env.outputs.JAVA_VERSION}}
    steps:
      - name: 'Setup Environment'
        id: setup-env
        run: |
          echo "JAVA_VERSION=${{ env.JAVA_VERSION }}" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'Compiles the application code'
        run: mvn clean compile --file pom.xml
  test:
    runs-on: ubuntu-latest

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'Runs the unit tests to test the application code'
        run: mvn test --file pom.xml
  deploy-to-gh-pages:
    needs:
      - build
      - test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 'Get the latest code from the `${{ github.repository }}` repository'
        uses: actions/checkout@v3
      - name: 'Set up the Oracle JDK `${{ env.JAVA_VERSION }}`'
        uses: './.github/actions/install-java'
        with:
          JAVA_VERSION_TO_INSTALL: ${{ env.JAVA_VERSION }}
      - name: 'TODO: upload the artifacts in the test job and then delete this action'
        run: mvn clean test --file pom.xml
#      - name: 'Generate JaCoCo Code Coverage Badge'
#        uses: cicirello/jacoco-badge-generator@v2
#        with:
#          generate-branches-badge: true
#          colors: green yellow orange red
#          intervals: 90 75 60
#          badges-directory: './target/site/jacoco/jacoco-resources/badges'
      - name: 'Generating the project site with testing report as well as code coverage report'
        run: mvn site --file pom.xml
      - name: 'Packaging the application'
        run: mvn --batch-mode --update-snapshots -DskipTests package --file pom.xml #TODO: upload the artifacts in the test job and then clean package
#      - name: 'Install gh-pages'
#        run: npm i gh-pages
      - name: 'Upload required files to gh-pages folder'
        uses: actions/upload-artifact@v3
        with:
          name: gh-pages
          retention-days: 1
          path: |
            README.md
            target/site
            target/surefire-reports
            target/*-SNAPSHOT*.jar*
#        run: ./.github/scripts/deploy-to-gh-pages.sh
#        shell: bash
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Download the uploaded artifacts to gh-pages folder'
        uses: actions/download-artifact@v3
        with:
          name: gh-pages
#          path: path/to/artifact
      - name: 'Deploy to GitHub Pages'
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: gh-pages
  deploy-to-gh-packages:
    needs: setup-env
    permissions:
      contents: read
      packages: write
    uses: ./.github/workflows/deploy.yml
    with:
      JAVA_VERSION_TO_INSTALL: ${{ needs.setup-env.outputs.JAVA_VERSION }}